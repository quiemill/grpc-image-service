package main

import (
	"bufio"
	"fmt"
	pb "grpc-image-service/api/gen/image_service"
	"log"
	"os"
	"strings"

	"google.golang.org/grpc"
)

func uploadImage(client pb.ImageServiceClient) {
	fmt.Println("–§—É–Ω–∫—Ü–∏—è uploadImage")
}

func listImages(client pb.ImageServiceClient) {
	fmt.Println("–§—É–Ω–∫—Ü–∏—è listImages")
}

func downloadImage(client pb.ImageServiceClient) {
	fmt.Println("–§—É–Ω–∫—Ü–∏—è downloadImage")
}

func main() {
	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
	conn, err := grpc.Dial("localhost:50051", grpc.WithInsecure())
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: %v", err)
	}
	defer conn.Close()

	client := pb.NewImageServiceClient(conn)
	for {
		fmt.Println("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
		fmt.Println("–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
		fmt.Println("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
		fmt.Println("–°–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
		fmt.Println("–í—ã–π—Ç–∏")

		fmt.Print("–í–∞—à –≤—ã–±–æ—Ä: ")
		reader := bufio.NewReader(os.Stdin)
		ch, _ := reader.ReadString('\n')
		ch = strings.TrimSpace(ch)

		switch ch {
		case "1":
			uploadImage(client)
		case "2":
			listImages(client)
		case "3":
			downloadImage(client)
		case "4":
			fmt.Println("üö™ –í—ã—Ö–æ–¥...")
			return
		default:
			fmt.Println("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
		}
	}
}
